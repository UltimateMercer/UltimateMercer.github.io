{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import {\n  defineDocumentType,\n  defineNestedType,\n  makeSource,\n} from \"contentlayer2/source-files\";\n\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\";\nimport rehypePrettyCode from \"rehype-pretty-code\";\nimport rehypeSlug from \"rehype-slug\";\nimport remarkGfm from \"remark-gfm\";\n\nexport const Author = defineDocumentType(() => ({\n  name: \"Author\",\n  filePathPattern: `authors/**/*.(md|mdx)`,\n  contentType: \"markdown\",\n  fields: {\n    name: {\n      type: \"string\",\n      required: true,\n    },\n    avatar: {\n      type: \"string\",\n      required: false,\n    },\n    occupation: {\n      type: \"string\",\n      required: false,\n    },\n    email: {\n      type: \"string\",\n      required: false,\n    },\n    github: {\n      type: \"string\",\n      required: false,\n    },\n    medium: {\n      type: \"string\",\n      required: false,\n    },\n    twitter: {\n      type: \"string\",\n      required: false,\n    },\n    linkedin: {\n      type: \"string\",\n      required: false,\n    },\n    instagram: {\n      type: \"string\",\n      required: false,\n    },\n  },\n}));\n\nexport const AuthorsArticle = defineNestedType(() => ({\n  name: \"AuthorsArticle\",\n  fields: {\n    name: {\n      type: \"string\",\n      required: true,\n    },\n    quote: {\n      type: \"string\",\n      required: false,\n    },\n  },\n}));\n\nexport const Article = defineDocumentType(() => ({\n  name: \"Article\",\n  filePathPattern: `projects/**/*.(md|mdx)`,\n  contentType: \"mdx\",\n  fields: {\n    title: {\n      type: \"string\",\n      description: \"The title of the post\",\n      required: true,\n    },\n    description: {\n      type: \"string\",\n      required: false,\n    },\n    cover: {\n      type: \"string\",\n      required: false,\n    },\n    imageHeader: {\n      type: \"string\",\n      required: false,\n    },\n    date: {\n      type: \"date\",\n      description: \"The date of the post\",\n      required: true,\n    },\n    modifiedDate: {\n      type: \"date\",\n      required: false,\n    },\n    channel: {\n      type: \"string\",\n      required: true,\n    },\n    category: {\n      type: \"string\",\n      required: true,\n    },\n    tags: {\n      type: \"list\",\n      of: {\n        type: \"string\",\n      },\n      required: false,\n      default: [],\n    },\n    layout: {\n      type: \"string\",\n      required: false,\n    },\n    filter: {\n      type: \"string\",\n      required: false,\n    },\n    typography: {\n      type: \"string\",\n      required: false,\n    },\n    draft: {\n      type: \"boolean\",\n      required: true,\n    },\n    authors: {\n      type: \"list\",\n      of: AuthorsArticle,\n      required: true,\n    },\n    gallery: {\n      type: \"list\",\n      of: { type: \"string\" },\n      required: false,\n    },\n  },\n  computedFields: {\n    slug: {\n      type: \"string\",\n      resolve: (article) => `/${article._raw.flattenedPath}`,\n    },\n  },\n}));\n\nexport const Academic = defineDocumentType(() => ({\n  name: \"Academic\",\n  filePathPattern: `academics/**/*.(md|mdx)`,\n  contentType: \"markdown\",\n  fields: {\n    institute: {\n      type: \"string\",\n      required: true,\n    },\n    course: {\n      type: \"string\",\n      required: true,\n    },\n    status: {\n      type: \"string\",\n      required: true,\n    },\n    image: {\n      type: \"string\",\n      required: false,\n    },\n  },\n}));\n\nexport const Experience = defineDocumentType(() => ({\n  name: \"Experience\",\n  filePathPattern: `experiences/**/*.(md|mdx)`,\n  contentType: \"markdown\",\n  fields: {\n    company: {\n      type: \"string\",\n      required: true,\n    },\n    role: {\n      type: \"string\",\n      required: true,\n    },\n    description: {\n      type: \"string\",\n      required: false,\n    },\n    start: {\n      type: \"string\",\n      required: true,\n    },\n    end: {\n      type: \"string\",\n      required: false,\n    },\n    image: {\n      type: \"string\",\n      required: false,\n    },\n    tags: {\n      type: \"list\",\n      of: {\n        type: \"string\",\n      },\n      required: false,\n      default: [],\n    },\n  },\n}));\n\nexport default makeSource({\n  contentDirPath: \"./src/content\",\n  documentTypes: [Article, Author, Academic, Experience],\n  mdx: {\n    remarkPlugins: [remarkGfm],\n    rehypePlugins: [\n      rehypeSlug,\n      [\n        rehypePrettyCode,\n        {\n          theme: \"night-owl\",\n          onVisitLine(node) {\n            if (node.children.length === 0) {\n              node.children = [{ type: \"text\", value: \" \" }]\n            }\n          },\n          onVisitHighlightedLine(node) {\n            node.properties.className.push(\"line--highlighted\")\n          },\n          onVisitHighlightedWord(node) {\n            node.properties.className = [\"word--highlighted\"]\n          }\n        }\n      ],\n      [\n        rehypeAutolinkHeadings,\n        {\n          properties: {\n            className: [\"subheading-anchor\"],\n            ariaLabel: \"Link para a se\u00E7\u00E3o\",\n          },\n        },\n      ]\n    ],\n  },\n});\n"],
  "mappings": "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",
  "names": []
}
