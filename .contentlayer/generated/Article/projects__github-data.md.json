{
  "title": "Github Data",
  "description": null,
  "cover": "/images/github-data-project-logo.jpg",
  "imageHeader": "/images/github-data-project-logo.jpg",
  "date": "2017-03-20T19:30:00.000Z",
  "modifiedDate": null,
  "channel": "Devs",
  "category": "Pessoal",
  "tags": [
    "Projeto pessoal"
  ],
  "layout": "landscape-layout",
  "filter": "filter-burn",
  "typography": null,
  "draft": false,
  "authors": [
    {
      "name": "Julian Silva da Cunha",
      "quote": null,
      "type": "AuthorsArticle",
      "_raw": {}
    }
  ],
  "gallery": null,
  "body": {
    "raw": "\nRecentemente, ao ler alguns artigos, vi um projeto em que um desenvolvedor utilizava a API do GitHub para pesquisar por um nome de usuário e exibir informações básicas sobre ele. Inspirado por isso, decidi criar minha própria versão dessa aplicação, buscando incluir mais informações detalhadas sobre o usuário.\n\nPara desenvolver essa aplicação, utilizei algumas tecnologias atuais, entre elas:\n\n- **Svelte/SvelteKit**: já tinha testado o Svelte anteriormente e sempre tive interesse em criar um projeto completo com ele. Acho o Svelte similar ao Vue, meu primeiro framework e com o qual trabalhei profissionalmente.\n- **Octokit e GitHub API**: para acessar dados do GitHub, usei o Octokit, que facilita as buscas e permite um número maior de requisições com autenticação.\n- **@tanstack/query**: essencial para gerenciar melhor as buscas e o cache dos dados obtidos.\n- **Shadcn-svelte**: como gosto de usar o ShadcnUI com React/Next.js, optei por uma versão compatível com Svelte, com componentes fáceis de usar e estilizar com TailwindCSS.\n- **Vercel**: usei para deploy. Normalmente, crio sites estáticos com GitHub Pages, mas, neste caso, a aplicação requer buscas dinâmicas de dados, então a Vercel foi mais adequada.\n- **v0**: usei essa IA como base para criar o componente de exibição de contribuições e para configurar queries de contribuições e repositórios fixados em GraphQL. Como v0 é voltado para React, tive que ajustar o componente para que funcionasse corretamente em Svelte.\n- **Lucide Icons, Phosphor Icons e fonte Inter**: escolhi essas bibliotecas de ícones e a fonte Inter para a tipografia geral da aplicação.\n\nA aplicação está disponível em [https://githubdata.ultimatemercer.com/](https://githubdata.ultimatemercer.com/?un=ultimatemercer).\n\nVocê também pode acessá-la com um nome de usuário pré-definido, por exemplo: [https://githubdata.ultimatemercer.com/?un=ultimatemercer](https://githubdata.ultimatemercer.com/?un=ultimatemercer). Assim, ao carregar o site, ele já exibe os dados do usuário.\n\nRealizei um teste de desempenho com o Lighthouse para verificar performance, acessibilidade, boas práticas e SEO, e obtive resultados excelentes. Embora haja uma leve oscilação na performance, os resultados iniciais foram melhores do que eu esperava, dado que não foquei tanto em otimização de performance.\n\n![Performance Lighthouse](../../../../images/github-data-project-performance.jpg)\n\n### Algumas capturas de tela da aplicação:\n\n![Captura 1](../../../../images/github-data-project-1.jpg)\n\n![Captura 2](../../../../images/github-data-project-2.jpg)\n\n![Captura 3](../../../../images/github-data-project-3.jpg)\n\nDesenvolver esse projeto foi uma experiência valiosa, tanto em termos de aprendizado quanto no uso de ferramentas. Um ponto de melhoria seria a fase de planejamento, já que precisei refatorar a estrutura para integrar o @tanstack/query.\n\n### Próximos Passos\n\nAinda quero melhorar alguns pontos no projeto (dei uma pausa no momento). Os principais pontos a trabalhar são:\n\n- Adicionar testes unitários;\n- Aperfeiçoar o carregamento de dados com um nome de usuário pré-definido;\n- Ajustar alguns detalhes de design.\n\nAtenciosamente,  \nJulian Silva da Cunha\n",
    "code": "var Component=(()=>{var u=Object.create;var s=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var f=(o,e)=>()=>(e||o((e={exports:{}}).exports,e),e.exports),v=(o,e)=>{for(var r in e)s(o,r,{get:e[r],enumerable:!0})},n=(o,e,r,t)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of h(e))!b.call(o,i)&&i!==r&&s(o,i,{get:()=>e[i],enumerable:!(t=p(e,i))||t.enumerable});return o};var j=(o,e,r)=>(r=o!=null?u(g(o)):{},n(e||!o||!o.__esModule?s(r,\"default\",{value:o,enumerable:!0}):r,o)),x=o=>n(s({},\"__esModule\",{value:!0}),o);var l=f((y,c)=>{c.exports=_jsx_runtime});var S={};v(S,{default:()=>m,frontmatter:()=>q});var a=j(l()),q={title:\"Github Data\",description:null,imageHeader:\"/images/github-data-project-logo.jpg\",cover:\"/images/github-data-project-logo.jpg\",date:\"2017-03-20 16:30\",modifiedDate:null,channel:\"Devs\",category:\"Pessoal\",tags:[\"Projeto pessoal\"],layout:\"landscape-layout\",filter:\"filter-burn\",typography:null,draft:!1,authors:[{name:\"Julian Silva da Cunha\",quote:null}],gallery:null};function d(o){let e={a:\"a\",br:\"br\",h3:\"h3\",img:\"img\",li:\"li\",p:\"p\",span:\"span\",strong:\"strong\",ul:\"ul\",...o.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.p,{children:\"Recentemente, ao ler alguns artigos, vi um projeto em que um desenvolvedor utilizava a API do GitHub para pesquisar por um nome de usu\\xE1rio e exibir informa\\xE7\\xF5es b\\xE1sicas sobre ele. Inspirado por isso, decidi criar minha pr\\xF3pria vers\\xE3o dessa aplica\\xE7\\xE3o, buscando incluir mais informa\\xE7\\xF5es detalhadas sobre o usu\\xE1rio.\"}),`\n`,(0,a.jsx)(e.p,{children:\"Para desenvolver essa aplica\\xE7\\xE3o, utilizei algumas tecnologias atuais, entre elas:\"}),`\n`,(0,a.jsxs)(e.ul,{children:[`\n`,(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:\"Svelte/SvelteKit\"}),\": j\\xE1 tinha testado o Svelte anteriormente e sempre tive interesse em criar um projeto completo com ele. Acho o Svelte similar ao Vue, meu primeiro framework e com o qual trabalhei profissionalmente.\"]}),`\n`,(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:\"Octokit e GitHub API\"}),\": para acessar dados do GitHub, usei o Octokit, que facilita as buscas e permite um n\\xFAmero maior de requisi\\xE7\\xF5es com autentica\\xE7\\xE3o.\"]}),`\n`,(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:\"@tanstack/query\"}),\": essencial para gerenciar melhor as buscas e o cache dos dados obtidos.\"]}),`\n`,(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:\"Shadcn-svelte\"}),\": como gosto de usar o ShadcnUI com React/Next.js, optei por uma vers\\xE3o compat\\xEDvel com Svelte, com componentes f\\xE1ceis de usar e estilizar com TailwindCSS.\"]}),`\n`,(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:\"Vercel\"}),\": usei para deploy. Normalmente, crio sites est\\xE1ticos com GitHub Pages, mas, neste caso, a aplica\\xE7\\xE3o requer buscas din\\xE2micas de dados, ent\\xE3o a Vercel foi mais adequada.\"]}),`\n`,(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:\"v0\"}),\": usei essa IA como base para criar o componente de exibi\\xE7\\xE3o de contribui\\xE7\\xF5es e para configurar queries de contribui\\xE7\\xF5es e reposit\\xF3rios fixados em GraphQL. Como v0 \\xE9 voltado para React, tive que ajustar o componente para que funcionasse corretamente em Svelte.\"]}),`\n`,(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:\"Lucide Icons, Phosphor Icons e fonte Inter\"}),\": escolhi essas bibliotecas de \\xEDcones e a fonte Inter para a tipografia geral da aplica\\xE7\\xE3o.\"]}),`\n`]}),`\n`,(0,a.jsxs)(e.p,{children:[\"A aplica\\xE7\\xE3o est\\xE1 dispon\\xEDvel em \",(0,a.jsx)(e.a,{href:\"https://githubdata.ultimatemercer.com/?un=ultimatemercer\",children:\"https://githubdata.ultimatemercer.com/\"}),\".\"]}),`\n`,(0,a.jsxs)(e.p,{children:[\"Voc\\xEA tamb\\xE9m pode acess\\xE1-la com um nome de usu\\xE1rio pr\\xE9-definido, por exemplo: \",(0,a.jsx)(e.a,{href:\"https://githubdata.ultimatemercer.com/?un=ultimatemercer\",children:\"https://githubdata.ultimatemercer.com/?un=ultimatemercer\"}),\". Assim, ao carregar o site, ele j\\xE1 exibe os dados do usu\\xE1rio.\"]}),`\n`,(0,a.jsx)(e.p,{children:\"Realizei um teste de desempenho com o Lighthouse para verificar performance, acessibilidade, boas pr\\xE1ticas e SEO, e obtive resultados excelentes. Embora haja uma leve oscila\\xE7\\xE3o na performance, os resultados iniciais foram melhores do que eu esperava, dado que n\\xE3o foquei tanto em otimiza\\xE7\\xE3o de performance.\"}),`\n`,(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{src:\"../../../../images/github-data-project-performance.jpg\",alt:\"Performance Lighthouse\"})}),`\n`,(0,a.jsxs)(e.h3,{id:\"algumas-capturas-de-tela-da-aplica\\xE7\\xE3o\",children:[(0,a.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link para a se\\xE7\\xE3o\",href:\"#algumas-capturas-de-tela-da-aplica\\xE7\\xE3o\",children:(0,a.jsx)(e.span,{className:\"icon icon-link\"})}),\"Algumas capturas de tela da aplica\\xE7\\xE3o:\"]}),`\n`,(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{src:\"../../../../images/github-data-project-1.jpg\",alt:\"Captura 1\"})}),`\n`,(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{src:\"../../../../images/github-data-project-2.jpg\",alt:\"Captura 2\"})}),`\n`,(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{src:\"../../../../images/github-data-project-3.jpg\",alt:\"Captura 3\"})}),`\n`,(0,a.jsx)(e.p,{children:\"Desenvolver esse projeto foi uma experi\\xEAncia valiosa, tanto em termos de aprendizado quanto no uso de ferramentas. Um ponto de melhoria seria a fase de planejamento, j\\xE1 que precisei refatorar a estrutura para integrar o @tanstack/query.\"}),`\n`,(0,a.jsxs)(e.h3,{id:\"pr\\xF3ximos-passos\",children:[(0,a.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link para a se\\xE7\\xE3o\",href:\"#pr\\xF3ximos-passos\",children:(0,a.jsx)(e.span,{className:\"icon icon-link\"})}),\"Pr\\xF3ximos Passos\"]}),`\n`,(0,a.jsx)(e.p,{children:\"Ainda quero melhorar alguns pontos no projeto (dei uma pausa no momento). Os principais pontos a trabalhar s\\xE3o:\"}),`\n`,(0,a.jsxs)(e.ul,{children:[`\n`,(0,a.jsx)(e.li,{children:\"Adicionar testes unit\\xE1rios;\"}),`\n`,(0,a.jsx)(e.li,{children:\"Aperfei\\xE7oar o carregamento de dados com um nome de usu\\xE1rio pr\\xE9-definido;\"}),`\n`,(0,a.jsx)(e.li,{children:\"Ajustar alguns detalhes de design.\"}),`\n`]}),`\n`,(0,a.jsxs)(e.p,{children:[\"Atenciosamente,\",(0,a.jsx)(e.br,{}),`\n`,\"Julian Silva da Cunha\"]})]})}function m(o={}){let{wrapper:e}=o.components||{};return e?(0,a.jsx)(e,{...o,children:(0,a.jsx)(d,{...o})}):d(o)}return x(S);})();\n;return Component;"
  },
  "_id": "projects/github-data.md",
  "_raw": {
    "sourceFilePath": "projects/github-data.md",
    "sourceFileName": "github-data.md",
    "sourceFileDir": "projects",
    "contentType": "markdown",
    "flattenedPath": "projects/github-data"
  },
  "type": "Article",
  "slug": "/projects/github-data"
}