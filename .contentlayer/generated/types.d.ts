// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer2/core'
import * as Local from 'contentlayer2/source-files'

export { isType } from 'contentlayer2/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type Academic = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Academic'
  institute: string
  course: string
  status: string
  image?: string | undefined
  /** Markdown file body */
  body: Markdown

}

export type Article = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Article'
  /** The title of the post */
  title: string
  description?: string | undefined
  cover?: string | undefined
  imageHeader?: string | undefined
  /** The date of the post */
  date: IsoDateTimeString
  modifiedDate?: IsoDateTimeString | undefined
  channel: string
  category: string
  tags: string[]
  layout?: string | undefined
  filter?: string | undefined
  typography?: string | undefined
  draft: boolean
  authors: AuthorsArticle[]
  gallery?: string[] | undefined
  /** MDX file body */
  body: MDX
  slug: string
}

export type Author = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Author'
  name: string
  avatar?: string | undefined
  occupation?: string | undefined
  email?: string | undefined
  github?: string | undefined
  medium?: string | undefined
  twitter?: string | undefined
  linkedin?: string | undefined
  instagram?: string | undefined
  /** Markdown file body */
  body: Markdown

}

export type Experience = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Experience'
  company: string
  role: string
  description?: string | undefined
  start: string
  end?: string | undefined
  image?: string | undefined
  tags: string[]
  /** Markdown file body */
  body: Markdown

}  

/** Nested types */
export type AuthorsArticle = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'AuthorsArticle'
  name: string
  quote?: string | undefined

}  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Academic | Article | Author | Experience
export type DocumentTypeNames = 'Academic' | 'Article' | 'Author' | 'Experience'

export type NestedTypes = AuthorsArticle
export type NestedTypeNames = 'AuthorsArticle'

export type DataExports = {
  allDocuments: DocumentTypes[]
  allArticles: Article[]
  allAuthors: Author[]
  allAcademics: Academic[]
  allExperiences: Experience[]
}


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
  dataExports: DataExports
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Academic: Academic
  Article: Article
  Author: Author
  Experience: Experience
}

export type NestedTypeMap = {
  AuthorsArticle: AuthorsArticle
}

 